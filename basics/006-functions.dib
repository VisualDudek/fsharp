#!meta

{"kernelInfo":{"defaultKernelName":"fsharp","items":[{"aliases":[],"languageName":"fsharp","name":"fsharp"}]}}

#!markdown

Explore functions

#!fsharp

let convert (a:string) :int =
    int a

#!fsharp

convert "1"

#!fsharp

let cardFace (card:int) :string = 
   let no = card % 13
   if no = 1 then "Ace"
   elif no = 0 then "King"
   elif no = 12 then "Queen"
   elif no = 11 then "Jack"
   else string no

#!fsharp

printfn "%s" (cardFace 11)

#!markdown

There is no `return` just drop variable you want to return:

#!fsharp

let addAndMultiply a b c = 
    let sum = a + b
    let product = sum * c
    product

#!fsharp

addAndMultiply 2 3 3

#!markdown

Declarative vs. imperative

#!markdown

Functionsl patterns:
- Composition `>>`
- Pipeline `|>`

#!fsharp

let add2 a = a + 2
let multiply3 a = a * 3 
let addAndMultiply a =
    let sum = add2 a
    let product = multiply3 sum
    product

printfn "%i" (addAndMultiply 2) // 12

#!fsharp

// Composition
let add2 a = a + 2
let multiply3 a = a * 3 
let addAndMultiply = add2 >> multiply3

printfn "%i" (addAndMultiply 2) // 12

#!fsharp

// Pipeline
let list = [4; 3; 1]
let sort (list: int list) = List.sort list
let print (list: int list)= List.iter(fun x-> printfn "item %i" x) list

list |> sort |> print // item 1 item 3 item 4

#!markdown

## Exercise

#!fsharp

let cards = [21; 3; 1; 7; 9; 23]
let cardFace card = 
    let no = card % 13
    if no = 1 then "Ace"
    elif no = 0 then "King"
    elif no = 12 then "Queen"
    elif no = 11 then "Jack"
    else string no

let suit card =
    let no = card / 13
    if no = 0 then "Hearts"
    elif no = 1 then "Spades"
    elif no = 2 then "Diamonds"
    else "Clubs"

let shuffle list =
    let random = System.Random()
    list |> List.sortBy (fun x -> random.Next())

let printCard card = printfn "%s of %s" (cardFace card) (suit card)

let printAll list = List.iter(fun x -> printCard(x)) list

let take (no:int) (list) = List.take no list

#!markdown

Your task is to take a deck of cards, shuffle it, take the top three cards, and then print the results.

#!fsharp

cards |> shuffle |> take 3 |> printAll
